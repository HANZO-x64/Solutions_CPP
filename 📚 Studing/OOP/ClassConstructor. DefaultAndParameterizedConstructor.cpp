#include <iostream>
#include <string>

using namespace std;

/*
*	Конструктор класса.
*	Конструктор с параметрами.
*	Конструктор по умолчанию.
* 
*	В ручную конструктор класса вызвать не может, он вызывается сам,
*	в тот момент, когда разработчик создает объект класса в main. 
* 
*	Конструктор есть у любого объекта класса, даже если разработчик в ручную
*	его не написал, компилятор самостоятельного (скрыто) его добавит.
*	Такой конструктор и называется - "Конструктор по умолчанию".
*/

class Point
{
private:
	int x;
	int y;

// Чтобы пользоваться конструкторам, его нужено поместить в public.
public:
	/* 
	Вид конструктор по умолчанию:	
	Point()
	{
		// Не принимает ни каках параметров
	}
	*/

	// Пример конструктора с параметрами:
	Point(int valueX, int valueY)
	{
		x = valueX;
		y = valueY;
		// После того как добавили параметры в конструктор,
		// нужно добавить их в объявлении класса 
	}
	int GetX()
	{
		return x;
	}
	void SetX(int valueX)
	{
		x = valueX;
	}
	int GetY()
	{
		return y;
	}
	void SetY(int valueY)
	{
		y = valueY * 2;
	}

	void Print()
	{
		cout << "X = " << x << "\tY = " << y << endl;
	}
};

int main()
{
	setlocale(LC_ALL, "ru");

	// Point a; - При таком объявлении, когда вид конструктора по умолчанию.

	// Вид конструктора с параметрами:
	Point a(5, 44);
	a.Print();	

	Point b(98, 234);
	b.Print();

	return 0;
}